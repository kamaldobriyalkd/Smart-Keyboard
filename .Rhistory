biGrams<-read.table("ngrams/biGrams.txt",header = T)
x<-biGrams[grep("^i ",biGrams[,1]),]
View(x)
y<-x[order(x$freq,decreasing=T),1][1:3]
y
unlist(lapply(strsplit(y," "),function(x){
x[2]
}))
strsplit("how to make a good art"," ")[[1]]
length(strsplit("how to make a good art"," ")[[1]])
strsplit("how to make a good art"," ")[[1]][6]
strsplit("how to make a good art"," ")[[1]][length(strsplit("how to make a good art"," ")[[1]])]
x<-biGrams[grep("^howto ",biGrams[,1]),]
x
y<-x[order(x$freq,decreasing=T),1][1:3]
y
length(x)
nrow(x)
x<-biGrams[grep("^am ",biGrams[,1]),]
x
x<-biGrams[grep("^sam ",biGrams[,1]),]
x
x<-biGrams[grep("^sick ",biGrams[,1]),]
x
x<-biGrams[grep("^howto ",biGrams[,1]),]
norw(x)
nrow(x)
nrow(x)>1
words<-strsplit("how to"," ")[[1]]
words
word<-words[length(words)-1:length(words)]
word
word<-words[(length(words)-1):length(words)]
word
paste("^",word," ",sep="")
paste(word)
paste(word,collapse = " ")
triGrams<-read.table("ngrams/triGrams.txt",header = T)
words<-strsplit("how to "," ")[[1]]
words
word<-words[length(words)-1:length(words)]
word
words
words<-strsplit("i am going to the"," ")[[1]]
words
word<-words[(length(words)-1):length(words)]
word
word<-paste(word,collapse = " ")
word
word<-paste("^",word," ",sep="")
word
x<-triGrams[grep(word,triGrams[,1]),]
x
y<-x[order(x$freq,decreasing=T),1][1:3]
y
z<-unlist(lapply(strsplit(y," "),function(x){
x[2]
}))
z
y
z<-unlist(lapply(strsplit(y," "),function(x){
x[3]
}))
x
z
strsplit("he is going"," ")[[1]]
words<-strsplit(sentence," ")[[1]]
words<-strsplit("he is going"," ")[[1]]
word<-words[(length(words)-2):length(words)]
word
words<-strsplit("he is going to"," ")[[1]]
word<-words[(length(words)-2):length(words)]
word
word<-paste(word,collapse = " ")
word<-paste("^",word," ",sep="")
word
x<-quadGrams[grep(word,quadGrams[,1]),]
quadGrams<-read.table("ngrams/quadGrams.txt",header = T)
x<-quadGrams[grep(word,quadGrams[,1]),]
x
y<-x[order(x$freq,decreasing=T),1][1:3]
z<-unlist(lapply(strsplit(y," "),function(x){
x[4]
}))
return(paste(z,collapse = " "))
z<-unlist(lapply(strsplit(y," "),function(x){
x[4]
}))
z
y
y<-y[is.na(y)]
y
y<-y[!is.na(y)]
y
y<-y[!is.na(y),]
is.na(y)
!is.na(y)
!(is.na(y))
not!(is.na(y))
y
y<-x[order(x$freq,decreasing=T),1][1:3]
x
y
words<-strsplit("a card for "," ")[[1]]
words
word<-words[(length(words)-2):length(words)]
word<-paste(word,collapse = " ")
word<-paste("^",word," ",sep="")
x<-quadGrams[grep(word,quadGrams[,1]),]
x
y<-x[order(x$freq,decreasing=T),1][1:nrow(x)]
y
y<-x[order(x$freq,decreasing=T),1][1:3]
y
y<-x[order(x$freq,decreasing=T),1][1:3]
y
is.na(y)
words<-strsplit("make a card "," ")[[1]]
word<-words[(length(words)-2):length(words)]
word<-paste(word,collapse = " ")
word<-paste("^",word," ",sep="")
x<-quadGrams[grep(word,quadGrams[,1]),]
x
y<-x[order(x$freq,decreasing=T),1][1:3]
y
is.na(y)
~is.na(y)
!is.na(y)
sum(!is.na(y))
y<-y[1:sum(!is.na(y)),]
y<-y[1:sum(!is.na(y))]
y
length(strsplit(" "," ")[[1]])==1
length(strsplit(" "," ")[[1]])
length(strsplit("how "," ")[[1]])
length(strsplit("how  "," ")[[1]])
length(strsplit("how are you   "," ")[[1]])
length(strsplit("how are you  2  "," ")[[1]])
length(strsplit("how are you  2  "," ")[[1]])
strsplit("how are you  2  "," ")[[1]]
strsplit("how are you  2   "," ")[[1]]
sentence<-"how are you  2  "
strsplit(sentence," ")[[1]]
sentence<-gsub("'","thisismyownapostrophetextsetforanalysis",sentence)
sentence<-gsub("'","#[a-z0-9]*",sentence)
sentence<-gsub("'","[^a-z]",sentence)
sentence
sentence<-gsub("'","thisismyownapostrophetextsetforanalysis",sentence)
sentence<-gsub("#[a-z0-9]*"," ",sentence)
sentence<-gsub("[^a-z]"," ",sentence)
sentence<-gsub("thisismyownapostrophetextsetforanalysis","'",sentence)
sentence
library(tokenizers)
library(tm)
sentence[1:2]
sentence<-"  how are you  2  "
sentence<-gsub("'","thisismyownapostrophetextsetforanalysis",sentence)
sentence
stripWhitespace(sentence)
strtrim(sentence)
strtrim("how are oyu")
strtrim("how are oyu",0)
strtrim("how are oyu",1)
trimws(sentence)
sentence<-"  how are you  2  "
stripWhitespace(trimws(sentence))
library(shiny)
tags$head(tags$style("#predict{color: red;
font-size: 20px;
font-style: italic;
}"
)
)
tag$head
paste(z,collapse = "     ")
cat(z,collapse = "     ")
paste0(z,collapse = "     ")
HTML('&nbsp;')
library(shinyapp)
library(shiny)
library(shinycssloaders)
quad<-head(quadGrams[order(quadGrams$freq,decreasing=T),],20)
View(quad)
View(quadGrams)
quad[1,1]
quad[1,2]
quad[2,1]
View(quadGrams)
View(biGrams)
View(quadGrams)
save.image("~/data science cap/Predict-Next-Word/.RData")
quadGrams<-read.table("ngrams/quadGrams.txt",header = T)
triGrams<-read.table("ngrams/triGrams.txt",header = T)
biGrams<-read.table("ngrams/biGrams.txt",header = T)
biGrams<-biGrams[biGrams$freq>20,]
View(quadGrams)
View(biGrams)
quadGrams<-biGrams[quadGrams$freq>20,]
quadGrams<-read.table("ngrams/quadGrams.txt",header = T)
triGrams<-read.table("ngrams/triGrams.txt",header = T)
biGrams<-read.table("ngrams/biGrams.txt",header = T)
biGrams<-biGrams[biGrams$freq>20,]
biGrams<-read.table("ngrams/biGrams.txt",header = T)
triGrams<-read.table("ngrams/triGrams.txt",header = T)
quadGrams<-read.table("ngrams/quadGrams.txt",header = T)
biGrams<-biGrams[biGrams$freq>20,]
quadGrams<-quadGrams[quadGrams$freq>20,]
triGrams<-triGrams[triGrams$freq>20,]
View(triGrams)
write.table(quadGrams,"ngrams/quadGrams.txt", row.names = F)
write.table(triGrams,"ngrams/triGrams.txt", row.names = F)
write.table(quadGrams,"ngrams/quadGrams.txt", row.names = F)
write.table(biGrams,"ngrams/biGrams.txt", row.names = F)
biGrams<-biGrams[biGrams$freq>50,]
biGrams<-biGrams[quadGrams$freq>50,]
quadGrams<-read.table("ngrams/quadGrams.txt",header = T)
triGrams<-read.table("ngrams/triGrams.txt",header = T)
biGrams<-read.table("ngrams/biGrams.txt",header = T)
write.table(biGrams,"ngrams/biGrams.txt", row.names = F)
biGrams<-biGrams[biGrams$freq>50,]
quadGrams<-quadGrams[quadGrams$freq>50,]
triGrams<-triGrams[triGrams$freq>50,]
write.table(triGrams,"ngrams/triGrams.txt", row.names = F)
write.table(quadGrams,"ngrams/quadGrams.txt", row.names = F)
write.table(biGrams,"ngrams/biGrams.txt", row.names = F)
View(biGrams)
